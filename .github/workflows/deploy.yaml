name: Deploy Frontend and Backend to Azure Container Apps
on:
  push:
    branches:
      - main
  workflow_dispatch:
env:
  FRONTEND_REPOSITORY: ${{ vars.DOCKERHUB_USERNAME }}/${{ secrets.CONTAINER_APP_NAME }}-frontend
  BACKEND_REPOSITORY: ${{ vars.DOCKERHUB_USERNAME }}/${{ secrets.CONTAINER_APP_NAME }}-backend
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: "|\n          ${{ vars.DOCKERHUB_USERNAME }}/${{ secrets.CONTAINER_APP_NAME }}-frontend:${{ github.sha }}\n          ${{ vars.DOCKERHUB_USERNAME }}/${{ secrets.CONTAINER_APP_NAME }}-frontend:latest"
      - name: Build and push Backend image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: "|\n          ${{ vars.DOCKERHUB_USERNAME }}/${{ secrets.CONTAINER_APP_NAME }}-backend:${{ github.sha }}\n          ${{ vars.DOCKERHUB_USERNAME }}/${{ secrets.CONTAINER_APP_NAME }}-backend:latest"
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Install Azure Container Apps extension
        run: az extension add --name containerapp
      - name: Ensure Resource Group Exists
        run: "|\n        az group show --name ${{ secrets.RESOURCE_GROUP }} || \\\n        az group create --name ${{ secrets.RESOURCE_GROUP }} --location eastus"
      - name: Ensure Managed Environment Exists
        run: "|\n        az containerapp env show --name ${{ secrets.CONTAINER_APP_ENVIRONMENT }} --resource-group ${{ secrets.RESOURCE_GROUP }} || \\\n        az containerapp env create --name ${{ secrets.CONTAINER_APP_ENVIRONMENT }} --resource-group ${{ secrets.RESOURCE_GROUP }} --location eastus"
      - name: Deploy Backend to Azure Container Apps
        run: "|\n        az containerapp create \\\n          --name ${{ secrets.CONTAINER_APP_NAME }}-backend-${{ github.run_id }} \\\n          --resource-group ${{ secrets.RESOURCE_GROUP }} \\\n          --environment ${{ secrets.CONTAINER_APP_ENVIRONMENT }} \\\n          --image ${{ vars.DOCKERHUB_USERNAME }}/${{ secrets.CONTAINER_APP_NAME }}-backend:${{ github.sha }} \\\n          --ingress internal \\\n          --target-port 5000 \\\n          --env-vars CONFIG_FILE=\"/app/config.py\" AzureSignalRConnectionString=\"${ secrets.AzureSignalRConnectionString }\" AZURE_STORAGE_CONNECTION_STRING=\"${ secrets.AZURE_STORAGE_CONNECTION_STRING }\""
      - name: Deploy Frontend to Azure Container Apps
        run: "|\n        az containerapp create \\\n          --name ${{ secrets.CONTAINER_APP_NAME }}-frontend-${{ github.run_id }} \\\n          --resource-group ${{ secrets.RESOURCE_GROUP }} \\\n          --environment ${{ secrets.CONTAINER_APP_ENVIRONMENT }} \\\n          --image ${{ vars.DOCKERHUB_USERNAME }}/${{ secrets.CONTAINER_APP_NAME }}-frontend:${{ github.sha }} \\\n          --ingress external \\\n          --target-port 3000 \\\n          --env-vars BACKEND_URL=http://${{ secrets.CONTAINER_APP_NAME }}-backend-${{ github.run_id }}:5000\""
      - name: Verify Deployment
        run: "|\n        az containerapp show -n ${{ secrets.CONTAINER_APP_NAME }}-frontend-${{ github.run_id }} -g ${{ secrets.RESOURCE_GROUP }} || exit 1"
      - name: Get Deployment URL
        run: "|\n        url=$(az containerapp show -n ${{ secrets.CONTAINER_APP_NAME }}-frontend-${{ github.run_id }} -g ${{ secrets.RESOURCE_GROUP }} --query properties.configuration.ingress.fqdn -o tsv)\n        echo \"DEPLOYMENT_URL=https://$url\" >> $GITHUB_ENV"
      - name: Output Deployment URL
        run: "|\n        echo \"Deployed to: ${{ env.DEPLOYMENT_URL }}\"\n        echo \"${{ env.DEPLOYMENT_URL }}\" > deployment_url.txt"
      - name: Upload Deployment URL Artifact
        uses: actions/upload-artifact@v3
        with:
          name: deployment-url-${{ github.run_id }}
          path: deployment_url.txt
